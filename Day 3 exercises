    Using find, find all files under the $HOME directory with a .bin extension ONLY.
    Once the file(s) and their path(s) have been found, remove the file name from the absolute path output.
    Ensure there is no trailing / at the end of the directory path when outputting to standard output.
    You may need to sort the output depending on the command(s) you use. Have each path displayed only once.

find $HOME -type f -name "*.bin" -exec dirname {} \; | sort -u




    Write a script which will copy the last entry/line in the passwd-like file specified by the $1 positional parameter
    Modify the copied line to change:
        User name to the value specified by $2 positional parameter
        Used id and group id to the value specified by $3 positional parameter
        Home directory to a directory matching the user name specified by $2 positional parameter under the /home directory (i.e. if the $2 was 'Chris', the new line would have /home/Chris as its home directory)
        The default shell to `/bin/bash'
    Append the modified line to the end of the file

#!/bin/bash
tail -1 "$1" | awk -F: -v "na=$2" -v "iden=$3" 'BEGIN {OFS=":"} {$1=na} {$3=iden} {$4=iden} {$6="/home/"na} {$NF="/bin/bash"}{print $0}' >> $1




    Find all executable files under the following four directories:
        /bin
        /sbin
        /usr/bin
        /usr/sbin
    Sort the filenames with absolute path, and get the md5sum of the 10th file from the top of the list.

find /bin /sbin /usr/bin /usr/sbin -type f -executable | sort | head -10 | tail -1 | xargs md5sum | cut -d' ' -f1






    Sort the /etc/passwd file numerically by the GID field.
    For the 10th entry in the sorted passwd file, get an md5 hash of that entryâ€™s home directory.
    Output ONLY the MD5 hash of the directory's name to standard output.

sort -t':' -k4n /etc/passwd | awk -F: 'NR==10 {print $6}' | md5sum | cut -d' ' -f1 





    Write a script which will find and hash the contents 3 levels deep from each of these directories: /bin /etc /var
    Your script should:
        Exclude file type named pipes. These can break your script.
        Redirect STDOUT and STDERR to separate files.
        Determine the count of files hashed in the file with hashes.
        Determine the count of unsuccessfully hashed directories.
        Have both counts output to the screen with an appropriate title for each count.

A=$(find /bin /etc/var -type f ! -type p -maxdepth 3 -exec md5sum {} \; > "-success" 2> "~/error")
b=$(cat ~/success | wc -l)
C=$(cat ~/error | grep -v "Permission denied" | wc -l)
echo "Successfully Hashed Files: $B"
echo "Unsuccessfully Hashed Directories: $C"
